// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddSprintPopup component in container is the same as snapshot 1`] = `
<AddSprintPopup
  data={
    Object {
      "backlogItems": Array [
        Object {
          "acceptanceCriteria": Array [
            "criteria",
            "criteria2",
          ],
          "estimated": true,
          "expectedTimeInHours": 2,
          "finished": false,
          "id": 0,
          "isInSprint": false,
          "name": "Item",
          "priority": 0,
          "sprintNumber": 0,
          "tasks": Array [
            Object {
              "assigness": Array [],
              "finished": false,
              "id": 0,
              "isAssignedToPBI": false,
              "link": "",
              "name": "",
              "pbiId": 0,
              "status": "",
            },
          ],
          "timeSpentInHours": 0,
        },
      ],
      "finishDate": "",
      "goal": "",
      "isCompleted": false,
      "isCurrent": false,
      "sprintNumber": 1,
      "status": "NotFinished",
      "title": "",
    }
  }
  error=""
  onCancel={[Function]}
  onCreate={[Function]}
  pbiData={
    Array [
      Object {
        "acceptanceCriteria": Array [
          "criteria",
          "criteria2",
        ],
        "estimated": true,
        "expectedTimeInHours": 2,
        "finished": false,
        "id": 0,
        "isInSprint": false,
        "name": "Item",
        "priority": 0,
        "sprintNumber": 0,
        "tasks": Array [
          Object {
            "assigness": Array [],
            "finished": false,
            "id": 0,
            "isAssignedToPBI": false,
            "link": "",
            "name": "",
            "pbiId": 0,
            "status": "",
          },
        ],
        "timeSpentInHours": 0,
      },
    ]
  }
  visible={true}
>
  <Modal
    closable={true}
    confirmLoading={false}
    destroyOnClose={true}
    footer={
      Array [
        <Button
          id="CancelInAddSprintPopup"
          onClick={[Function]}
        >
          Cancel
        </Button>,
        <Button
          id="SaveInAddSprintPopup"
          loading={false}
          onClick={[Function]}
          type="primary"
        >
          Save
        </Button>,
      ]
    }
    okType="primary"
    onCancel={[Function]}
    title="Create Sprint"
    visible={true}
    width={520}
  >
    <Dialog
      closable={true}
      closeIcon={
        <span
          className="ant-modal-close-x"
        >
          <ForwardRef(CloseOutlined)
            className="ant-modal-close-icon"
          />
        </span>
      }
      confirmLoading={false}
      destroyOnClose={true}
      focusTriggerAfterClose={true}
      footer={
        Array [
          <Button
            id="CancelInAddSprintPopup"
            onClick={[Function]}
          >
            Cancel
          </Button>,
          <Button
            id="SaveInAddSprintPopup"
            loading={false}
            onClick={[Function]}
            type="primary"
          >
            Save
          </Button>,
        ]
      }
      maskTransitionName="ant-fade"
      okType="primary"
      onCancel={[Function]}
      onClose={[Function]}
      prefixCls="ant-modal"
      title="Create Sprint"
      transitionName="ant-zoom"
      visible={true}
      width={520}
      wrapClassName=""
    >
      <PortalWrapper
        visible={true}
      >
        <ForwardRef
          getContainer={[Function]}
        >
          <Portal
            containerInfo={
              <div>
                <div
                  class="ant-modal-root"
                >
                  <div
                    class="ant-modal-mask"
                  />
                  <div
                    aria-labelledby="rcDialogTitle0"
                    class="ant-modal-wrap"
                    role="dialog"
                    tabindex="-1"
                  >
                    <div
                      class="ant-modal"
                      role="document"
                      style="width: 520px;"
                    >
                      <div
                        aria-hidden="true"
                        style="width: 0px; height: 0px; overflow: hidden; outline: none;"
                        tabindex="0"
                      />
                      <div
                        class="ant-modal-content"
                      >
                        <button
                          aria-label="Close"
                          class="ant-modal-close"
                          type="button"
                        >
                          <span
                            class="ant-modal-close-x"
                          >
                            <span
                              aria-label="close"
                              class="anticon anticon-close ant-modal-close-icon"
                              role="img"
                            >
                              <svg
                                aria-hidden="true"
                                data-icon="close"
                                fill="currentColor"
                                focusable="false"
                                height="1em"
                                viewBox="64 64 896 896"
                                width="1em"
                              >
                                <path
                                  d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                />
                              </svg>
                            </span>
                          </span>
                        </button>
                        <div
                          class="ant-modal-header"
                        >
                          <div
                            class="ant-modal-title"
                            id="rcDialogTitle0"
                          >
                            Create Sprint
                          </div>
                        </div>
                        <div
                          class="ant-modal-body"
                        >
                          <form
                            class="ant-form ant-form-vertical"
                            id="form_in_modal"
                          >
                            <article
                              class="ant-typography"
                              style="color: red;"
                            />
                            <div
                              class="ant-col finishDate-item-label"
                            >
                              <label
                                class="finishDate-item-required"
                                title="Sprint Deadline"
                              >
                                Sprint Deadline
                              </label>
                            </div>
                            <div
                              class="ant-row ant-form-item"
                            >
                              <div
                                class="ant-col ant-form-item-control"
                              >
                                <div
                                  class="ant-form-item-control-input"
                                >
                                  <div
                                    class="ant-form-item-control-input-content"
                                  >
                                    <div
                                      class="ant-picker"
                                    >
                                      <div
                                        class="ant-picker-input"
                                      >
                                        <input
                                          autocomplete="off"
                                          id="form_in_modal_finishDate"
                                          placeholder="Select date"
                                          readonly=""
                                          size="12"
                                          title=""
                                          value=""
                                        />
                                        <span
                                          class="ant-picker-suffix"
                                        >
                                          <span
                                            aria-label="calendar"
                                            class="anticon anticon-calendar"
                                            role="img"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              data-icon="calendar"
                                              fill="currentColor"
                                              focusable="false"
                                              height="1em"
                                              viewBox="64 64 896 896"
                                              width="1em"
                                            >
                                              <path
                                                d="M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </div>
                            </div>
                            <div
                              class="ant-col title-item-label"
                            >
                              <label
                                class="title-item-required"
                                title="Title"
                              >
                                Title
                              </label>
                            </div>
                            <div
                              class="ant-row ant-form-item"
                            >
                              <div
                                class="ant-col ant-form-item-control"
                              >
                                <div
                                  class="ant-form-item-control-input"
                                >
                                  <div
                                    class="ant-form-item-control-input-content"
                                  >
                                    <input
                                      autocomplete="on"
                                      class="ant-input"
                                      id="form_in_modal_title"
                                      maxlength="60"
                                      required=""
                                      type="text"
                                      value=""
                                    />
                                  </div>
                                </div>
                              </div>
                            </div>
                            <div
                              class="ant-col goal-item-label"
                            >
                              <label
                                class="goal-item-required"
                                title="Goal"
                              >
                                Goal
                              </label>
                            </div>
                            <div
                              class="ant-row ant-form-item"
                            >
                              <div
                                class="ant-col ant-form-item-control"
                              >
                                <div
                                  class="ant-form-item-control-input"
                                >
                                  <div
                                    class="ant-form-item-control-input-content"
                                  >
                                    <textarea
                                      class="ant-input"
                                      id="form_in_modal_goal"
                                      maxlength="105"
                                      required=""
                                    />
                                  </div>
                                </div>
                              </div>
                            </div>
                          </form>
                        </div>
                        <div
                          class="ant-modal-footer"
                        >
                          <button
                            class="ant-btn"
                            id="CancelInAddSprintPopup"
                            type="button"
                          >
                            <span>
                              Cancel
                            </span>
                          </button>
                          <button
                            class="ant-btn ant-btn-primary"
                            id="SaveInAddSprintPopup"
                            type="button"
                          >
                            <span>
                              Save
                            </span>
                          </button>
                        </div>
                      </div>
                      <div
                        aria-hidden="true"
                        style="width: 0px; height: 0px; overflow: hidden; outline: none;"
                        tabindex="0"
                      />
                    </div>
                  </div>
                </div>
              </div>
            }
          >
            <Dialog
              afterClose={[Function]}
              closable={true}
              closeIcon={
                <span
                  className="ant-modal-close-x"
                >
                  <ForwardRef(CloseOutlined)
                    className="ant-modal-close-icon"
                  />
                </span>
              }
              confirmLoading={false}
              destroyOnClose={true}
              focusTriggerAfterClose={true}
              footer={
                Array [
                  <Button
                    id="CancelInAddSprintPopup"
                    onClick={[Function]}
                  >
                    Cancel
                  </Button>,
                  <Button
                    id="SaveInAddSprintPopup"
                    loading={false}
                    onClick={[Function]}
                    type="primary"
                  >
                    Save
                  </Button>,
                ]
              }
              getContainer={[Function]}
              getOpenCount={[Function]}
              maskTransitionName="ant-fade"
              okType="primary"
              onCancel={[Function]}
              onClose={[Function]}
              prefixCls="ant-modal"
              scrollLocker={
                ScrollLocker {
                  "getContainer": [Function],
                  "lock": [Function],
                  "lockTarget": 0,
                  "options": Object {
                    "container": <body
                      class="ant-scrolling-effect"
                      style="overflow: hidden; overflow-x: hidden; overflow-y: hidden;"
                    >
                      <div />
                      <div>
                        <div
                          class="ant-modal-root"
                        >
                          <div
                            class="ant-modal-mask"
                          />
                          <div
                            aria-labelledby="rcDialogTitle0"
                            class="ant-modal-wrap"
                            role="dialog"
                            tabindex="-1"
                          >
                            <div
                              class="ant-modal"
                              role="document"
                              style="width: 520px;"
                            >
                              <div
                                aria-hidden="true"
                                style="width: 0px; height: 0px; overflow: hidden; outline: none;"
                                tabindex="0"
                              />
                              <div
                                class="ant-modal-content"
                              >
                                <button
                                  aria-label="Close"
                                  class="ant-modal-close"
                                  type="button"
                                >
                                  <span
                                    class="ant-modal-close-x"
                                  >
                                    <span
                                      aria-label="close"
                                      class="anticon anticon-close ant-modal-close-icon"
                                      role="img"
                                    >
                                      <svg
                                        aria-hidden="true"
                                        data-icon="close"
                                        fill="currentColor"
                                        focusable="false"
                                        height="1em"
                                        viewBox="64 64 896 896"
                                        width="1em"
                                      >
                                        <path
                                          d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                        />
                                      </svg>
                                    </span>
                                  </span>
                                </button>
                                <div
                                  class="ant-modal-header"
                                >
                                  <div
                                    class="ant-modal-title"
                                    id="rcDialogTitle0"
                                  >
                                    Create Sprint
                                  </div>
                                </div>
                                <div
                                  class="ant-modal-body"
                                >
                                  <form
                                    class="ant-form ant-form-vertical"
                                    id="form_in_modal"
                                  >
                                    <article
                                      class="ant-typography"
                                      style="color: red;"
                                    />
                                    <div
                                      class="ant-col finishDate-item-label"
                                    >
                                      <label
                                        class="finishDate-item-required"
                                        title="Sprint Deadline"
                                      >
                                        Sprint Deadline
                                      </label>
                                    </div>
                                    <div
                                      class="ant-row ant-form-item"
                                    >
                                      <div
                                        class="ant-col ant-form-item-control"
                                      >
                                        <div
                                          class="ant-form-item-control-input"
                                        >
                                          <div
                                            class="ant-form-item-control-input-content"
                                          >
                                            <div
                                              class="ant-picker"
                                            >
                                              <div
                                                class="ant-picker-input"
                                              >
                                                <input
                                                  autocomplete="off"
                                                  id="form_in_modal_finishDate"
                                                  placeholder="Select date"
                                                  readonly=""
                                                  size="12"
                                                  title=""
                                                  value=""
                                                />
                                                <span
                                                  class="ant-picker-suffix"
                                                >
                                                  <span
                                                    aria-label="calendar"
                                                    class="anticon anticon-calendar"
                                                    role="img"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      data-icon="calendar"
                                                      fill="currentColor"
                                                      focusable="false"
                                                      height="1em"
                                                      viewBox="64 64 896 896"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z"
                                                      />
                                                    </svg>
                                                  </span>
                                                </span>
                                              </div>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                    <div
                                      class="ant-col title-item-label"
                                    >
                                      <label
                                        class="title-item-required"
                                        title="Title"
                                      >
                                        Title
                                      </label>
                                    </div>
                                    <div
                                      class="ant-row ant-form-item"
                                    >
                                      <div
                                        class="ant-col ant-form-item-control"
                                      >
                                        <div
                                          class="ant-form-item-control-input"
                                        >
                                          <div
                                            class="ant-form-item-control-input-content"
                                          >
                                            <input
                                              autocomplete="on"
                                              class="ant-input"
                                              id="form_in_modal_title"
                                              maxlength="60"
                                              required=""
                                              type="text"
                                              value=""
                                            />
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                    <div
                                      class="ant-col goal-item-label"
                                    >
                                      <label
                                        class="goal-item-required"
                                        title="Goal"
                                      >
                                        Goal
                                      </label>
                                    </div>
                                    <div
                                      class="ant-row ant-form-item"
                                    >
                                      <div
                                        class="ant-col ant-form-item-control"
                                      >
                                        <div
                                          class="ant-form-item-control-input"
                                        >
                                          <div
                                            class="ant-form-item-control-input-content"
                                          >
                                            <textarea
                                              class="ant-input"
                                              id="form_in_modal_goal"
                                              maxlength="105"
                                              required=""
                                            />
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                  </form>
                                </div>
                                <div
                                  class="ant-modal-footer"
                                >
                                  <button
                                    class="ant-btn"
                                    id="CancelInAddSprintPopup"
                                    type="button"
                                  >
                                    <span>
                                      Cancel
                                    </span>
                                  </button>
                                  <button
                                    class="ant-btn ant-btn-primary"
                                    id="SaveInAddSprintPopup"
                                    type="button"
                                  >
                                    <span>
                                      Save
                                    </span>
                                  </button>
                                </div>
                              </div>
                              <div
                                aria-hidden="true"
                                style="width: 0px; height: 0px; overflow: hidden; outline: none;"
                                tabindex="0"
                              />
                            </div>
                          </div>
                        </div>
                      </div>
                    </body>,
                  },
                  "reLock": [Function],
                  "unLock": [Function],
                }
              }
              switchScrollingEffect={[Function]}
              title="Create Sprint"
              transitionName="ant-zoom"
              visible={true}
              width={520}
              wrapClassName=""
            >
              <div
                className="ant-modal-root"
              >
                <Mask
                  motionName="ant-fade"
                  prefixCls="ant-modal"
                  style={
                    Object {
                      "zIndex": undefined,
                    }
                  }
                  visible={true}
                >
                  <CSSMotion
                    key="mask"
                    leavedClassName="ant-modal-mask-hidden"
                    motionName="ant-fade"
                    visible={true}
                  >
                    <DomWrapper>
                      <div
                        className="ant-modal-mask"
                        style={
                          Object {
                            "zIndex": undefined,
                          }
                        }
                      />
                    </DomWrapper>
                  </CSSMotion>
                </Mask>
                <div
                  aria-labelledby="rcDialogTitle0"
                  className="ant-modal-wrap"
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  role="dialog"
                  style={
                    Object {
                      "display": null,
                      "zIndex": undefined,
                    }
                  }
                  tabIndex={-1}
                >
                  <Content
                    afterClose={[Function]}
                    ariaId="rcDialogTitle0"
                    closable={true}
                    closeIcon={
                      <span
                        className="ant-modal-close-x"
                      >
                        <ForwardRef(CloseOutlined)
                          className="ant-modal-close-icon"
                        />
                      </span>
                    }
                    confirmLoading={false}
                    destroyOnClose={true}
                    focusTriggerAfterClose={true}
                    footer={
                      Array [
                        <Button
                          id="CancelInAddSprintPopup"
                          onClick={[Function]}
                        >
                          Cancel
                        </Button>,
                        <Button
                          id="SaveInAddSprintPopup"
                          loading={false}
                          onClick={[Function]}
                          type="primary"
                        >
                          Save
                        </Button>,
                      ]
                    }
                    getContainer={[Function]}
                    getOpenCount={[Function]}
                    maskTransitionName="ant-fade"
                    motionName="ant-zoom"
                    okType="primary"
                    onCancel={[Function]}
                    onClose={[Function]}
                    onMouseDown={[Function]}
                    onMouseUp={[Function]}
                    onVisibleChanged={[Function]}
                    prefixCls="ant-modal"
                    scrollLocker={
                      ScrollLocker {
                        "getContainer": [Function],
                        "lock": [Function],
                        "lockTarget": 0,
                        "options": Object {
                          "container": <body
                            class="ant-scrolling-effect"
                            style="overflow: hidden; overflow-x: hidden; overflow-y: hidden;"
                          >
                            <div />
                            <div>
                              <div
                                class="ant-modal-root"
                              >
                                <div
                                  class="ant-modal-mask"
                                />
                                <div
                                  aria-labelledby="rcDialogTitle0"
                                  class="ant-modal-wrap"
                                  role="dialog"
                                  tabindex="-1"
                                >
                                  <div
                                    class="ant-modal"
                                    role="document"
                                    style="width: 520px;"
                                  >
                                    <div
                                      aria-hidden="true"
                                      style="width: 0px; height: 0px; overflow: hidden; outline: none;"
                                      tabindex="0"
                                    />
                                    <div
                                      class="ant-modal-content"
                                    >
                                      <button
                                        aria-label="Close"
                                        class="ant-modal-close"
                                        type="button"
                                      >
                                        <span
                                          class="ant-modal-close-x"
                                        >
                                          <span
                                            aria-label="close"
                                            class="anticon anticon-close ant-modal-close-icon"
                                            role="img"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              data-icon="close"
                                              fill="currentColor"
                                              focusable="false"
                                              height="1em"
                                              viewBox="64 64 896 896"
                                              width="1em"
                                            >
                                              <path
                                                d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                              />
                                            </svg>
                                          </span>
                                        </span>
                                      </button>
                                      <div
                                        class="ant-modal-header"
                                      >
                                        <div
                                          class="ant-modal-title"
                                          id="rcDialogTitle0"
                                        >
                                          Create Sprint
                                        </div>
                                      </div>
                                      <div
                                        class="ant-modal-body"
                                      >
                                        <form
                                          class="ant-form ant-form-vertical"
                                          id="form_in_modal"
                                        >
                                          <article
                                            class="ant-typography"
                                            style="color: red;"
                                          />
                                          <div
                                            class="ant-col finishDate-item-label"
                                          >
                                            <label
                                              class="finishDate-item-required"
                                              title="Sprint Deadline"
                                            >
                                              Sprint Deadline
                                            </label>
                                          </div>
                                          <div
                                            class="ant-row ant-form-item"
                                          >
                                            <div
                                              class="ant-col ant-form-item-control"
                                            >
                                              <div
                                                class="ant-form-item-control-input"
                                              >
                                                <div
                                                  class="ant-form-item-control-input-content"
                                                >
                                                  <div
                                                    class="ant-picker"
                                                  >
                                                    <div
                                                      class="ant-picker-input"
                                                    >
                                                      <input
                                                        autocomplete="off"
                                                        id="form_in_modal_finishDate"
                                                        placeholder="Select date"
                                                        readonly=""
                                                        size="12"
                                                        title=""
                                                        value=""
                                                      />
                                                      <span
                                                        class="ant-picker-suffix"
                                                      >
                                                        <span
                                                          aria-label="calendar"
                                                          class="anticon anticon-calendar"
                                                          role="img"
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            data-icon="calendar"
                                                            fill="currentColor"
                                                            focusable="false"
                                                            height="1em"
                                                            viewBox="64 64 896 896"
                                                            width="1em"
                                                          >
                                                            <path
                                                              d="M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z"
                                                            />
                                                          </svg>
                                                        </span>
                                                      </span>
                                                    </div>
                                                  </div>
                                                </div>
                                              </div>
                                            </div>
                                          </div>
                                          <div
                                            class="ant-col title-item-label"
                                          >
                                            <label
                                              class="title-item-required"
                                              title="Title"
                                            >
                                              Title
                                            </label>
                                          </div>
                                          <div
                                            class="ant-row ant-form-item"
                                          >
                                            <div
                                              class="ant-col ant-form-item-control"
                                            >
                                              <div
                                                class="ant-form-item-control-input"
                                              >
                                                <div
                                                  class="ant-form-item-control-input-content"
                                                >
                                                  <input
                                                    autocomplete="on"
                                                    class="ant-input"
                                                    id="form_in_modal_title"
                                                    maxlength="60"
                                                    required=""
                                                    type="text"
                                                    value=""
                                                  />
                                                </div>
                                              </div>
                                            </div>
                                          </div>
                                          <div
                                            class="ant-col goal-item-label"
                                          >
                                            <label
                                              class="goal-item-required"
                                              title="Goal"
                                            >
                                              Goal
                                            </label>
                                          </div>
                                          <div
                                            class="ant-row ant-form-item"
                                          >
                                            <div
                                              class="ant-col ant-form-item-control"
                                            >
                                              <div
                                                class="ant-form-item-control-input"
                                              >
                                                <div
                                                  class="ant-form-item-control-input-content"
                                                >
                                                  <textarea
                                                    class="ant-input"
                                                    id="form_in_modal_goal"
                                                    maxlength="105"
                                                    required=""
                                                  />
                                                </div>
                                              </div>
                                            </div>
                                          </div>
                                        </form>
                                      </div>
                                      <div
                                        class="ant-modal-footer"
                                      >
                                        <button
                                          class="ant-btn"
                                          id="CancelInAddSprintPopup"
                                          type="button"
                                        >
                                          <span>
                                            Cancel
                                          </span>
                                        </button>
                                        <button
                                          class="ant-btn ant-btn-primary"
                                          id="SaveInAddSprintPopup"
                                          type="button"
                                        >
                                          <span>
                                            Save
                                          </span>
                                        </button>
                                      </div>
                                    </div>
                                    <div
                                      aria-hidden="true"
                                      style="width: 0px; height: 0px; overflow: hidden; outline: none;"
                                      tabindex="0"
                                    />
                                  </div>
                                </div>
                              </div>
                            </div>
                          </body>,
                        },
                        "reLock": [Function],
                        "unLock": [Function],
                      }
                    }
                    switchScrollingEffect={[Function]}
                    title="Create Sprint"
                    transitionName="ant-zoom"
                    visible={true}
                    width={520}
                    wrapClassName=""
                  >
                    <CSSMotion
                      motionName="ant-zoom"
                      onAppearPrepare={[Function]}
                      onEnterPrepare={[Function]}
                      onVisibleChanged={[Function]}
                      removeOnLeave={true}
                      visible={true}
                    >
                      <DomWrapper>
                        <div
                          className="ant-modal"
                          key="dialog-element"
                          onMouseDown={[Function]}
                          onMouseUp={[Function]}
                          role="document"
                          style={
                            Object {
                              "width": 520,
                            }
                          }
                        >
                          <div
                            aria-hidden="true"
                            style={
                              Object {
                                "height": 0,
                                "outline": "none",
                                "overflow": "hidden",
                                "width": 0,
                              }
                            }
                            tabIndex={0}
                          />
                          <Component
                            shouldUpdate={true}
                          >
                            <div
                              className="ant-modal-content"
                            >
                              <button
                                aria-label="Close"
                                className="ant-modal-close"
                                onClick={[Function]}
                                type="button"
                              >
                                <span
                                  className="ant-modal-close-x"
                                >
                                  <ForwardRef(CloseOutlined)
                                    className="ant-modal-close-icon"
                                  >
                                    <AntdIcon
                                      className="ant-modal-close-icon"
                                      icon={
                                        Object {
                                          "icon": Object {
                                            "attrs": Object {
                                              "focusable": "false",
                                              "viewBox": "64 64 896 896",
                                            },
                                            "children": Array [
                                              Object {
                                                "attrs": Object {
                                                  "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                },
                                                "tag": "path",
                                              },
                                            ],
                                            "tag": "svg",
                                          },
                                          "name": "close",
                                          "theme": "outlined",
                                        }
                                      }
                                    >
                                      <span
                                        aria-label="close"
                                        className="anticon anticon-close ant-modal-close-icon"
                                        role="img"
                                      >
                                        <IconReact
                                          icon={
                                            Object {
                                              "icon": Object {
                                                "attrs": Object {
                                                  "focusable": "false",
                                                  "viewBox": "64 64 896 896",
                                                },
                                                "children": Array [
                                                  Object {
                                                    "attrs": Object {
                                                      "d": "M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z",
                                                    },
                                                    "tag": "path",
                                                  },
                                                ],
                                                "tag": "svg",
                                              },
                                              "name": "close",
                                              "theme": "outlined",
                                            }
                                          }
                                        >
                                          <svg
                                            aria-hidden="true"
                                            data-icon="close"
                                            fill="currentColor"
                                            focusable="false"
                                            height="1em"
                                            key="svg-close"
                                            viewBox="64 64 896 896"
                                            width="1em"
                                          >
                                            <path
                                              d="M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z"
                                              key="svg-close-svg-0"
                                            />
                                          </svg>
                                        </IconReact>
                                      </span>
                                    </AntdIcon>
                                  </ForwardRef(CloseOutlined)>
                                </span>
                              </button>
                              <div
                                className="ant-modal-header"
                              >
                                <div
                                  className="ant-modal-title"
                                  id="rcDialogTitle0"
                                >
                                  Create Sprint
                                </div>
                              </div>
                              <div
                                className="ant-modal-body"
                              >
                                <ForwardRef(InternalForm)
                                  form={
                                    Object {
                                      "__INTERNAL__": Object {
                                        "itemRef": [Function],
                                        "name": "form_in_modal",
                                      },
                                      "getFieldError": [Function],
                                      "getFieldInstance": [Function],
                                      "getFieldValue": [Function],
                                      "getFieldWarning": [Function],
                                      "getFieldsError": [Function],
                                      "getFieldsValue": [Function],
                                      "getInternalHooks": [Function],
                                      "isFieldTouched": [Function],
                                      "isFieldValidating": [Function],
                                      "isFieldsTouched": [Function],
                                      "isFieldsValidating": [Function],
                                      "resetFields": [Function],
                                      "scrollToField": [Function],
                                      "setFields": [Function],
                                      "setFieldsValue": [Function],
                                      "submit": [Function],
                                      "validateFields": [Function],
                                    }
                                  }
                                  initialValues={
                                    Object {
                                      "modifier": "public",
                                    }
                                  }
                                  layout="vertical"
                                  name="form_in_modal"
                                >
                                  <SizeContextProvider>
                                    <ForwardRef(Form)
                                      className="ant-form ant-form-vertical"
                                      form={
                                        Object {
                                          "__INTERNAL__": Object {
                                            "itemRef": [Function],
                                            "name": "form_in_modal",
                                          },
                                          "getFieldError": [Function],
                                          "getFieldInstance": [Function],
                                          "getFieldValue": [Function],
                                          "getFieldWarning": [Function],
                                          "getFieldsError": [Function],
                                          "getFieldsValue": [Function],
                                          "getInternalHooks": [Function],
                                          "isFieldTouched": [Function],
                                          "isFieldValidating": [Function],
                                          "isFieldsTouched": [Function],
                                          "isFieldsValidating": [Function],
                                          "resetFields": [Function],
                                          "scrollToField": [Function],
                                          "setFields": [Function],
                                          "setFieldsValue": [Function],
                                          "submit": [Function],
                                          "validateFields": [Function],
                                        }
                                      }
                                      id="form_in_modal"
                                      initialValues={
                                        Object {
                                          "modifier": "public",
                                        }
                                      }
                                      name="form_in_modal"
                                      onFinishFailed={[Function]}
                                    >
                                      <form
                                        className="ant-form ant-form-vertical"
                                        id="form_in_modal"
                                        onReset={[Function]}
                                        onSubmit={[Function]}
                                      >
                                        <Typography
                                          style={
                                            Object {
                                              "color": "red",
                                            }
                                          }
                                        >
                                          <article
                                            className="ant-typography"
                                            style={
                                              Object {
                                                "color": "red",
                                              }
                                            }
                                          />
                                        </Typography>
                                        <FormItemLabel
                                          label="Sprint Deadline"
                                          prefixCls="finishDate"
                                          required={true}
                                        >
                                          <Col
                                            className="finishDate-item-label"
                                          >
                                            <div
                                              className="ant-col finishDate-item-label"
                                              style={Object {}}
                                            >
                                              <label
                                                className="finishDate-item-required"
                                                title="Sprint Deadline"
                                              >
                                                Sprint Deadline
                                              </label>
                                            </div>
                                          </Col>
                                        </FormItemLabel>
                                        <FormItem
                                          initialValue=""
                                          name="finishDate"
                                          rules={
                                            Array [
                                              Object {
                                                "message": "Please input the deadline of this sprint!",
                                                "required": true,
                                              },
                                            ]
                                          }
                                        >
                                          <WrapperField
                                            initialValue=""
                                            messageVariables={
                                              Object {
                                                "label": "finishDate",
                                              }
                                            }
                                            name="finishDate"
                                            onMetaChange={[Function]}
                                            rules={
                                              Array [
                                                Object {
                                                  "message": "Please input the deadline of this sprint!",
                                                  "required": true,
                                                },
                                              ]
                                            }
                                            trigger="onChange"
                                            validateTrigger="onChange"
                                          >
                                            <Field
                                              fieldContext={
                                                Object {
                                                  "__INTERNAL__": Object {
                                                    "itemRef": [Function],
                                                    "name": "form_in_modal",
                                                  },
                                                  "getFieldError": [Function],
                                                  "getFieldInstance": [Function],
                                                  "getFieldValue": [Function],
                                                  "getFieldWarning": [Function],
                                                  "getFieldsError": [Function],
                                                  "getFieldsValue": [Function],
                                                  "getInternalHooks": [Function],
                                                  "isFieldTouched": [Function],
                                                  "isFieldValidating": [Function],
                                                  "isFieldsTouched": [Function],
                                                  "isFieldsValidating": [Function],
                                                  "resetFields": [Function],
                                                  "scrollToField": [Function],
                                                  "setFields": [Function],
                                                  "setFieldsValue": [Function],
                                                  "submit": [Function],
                                                  "validateFields": [Function],
                                                  "validateTrigger": "onChange",
                                                }
                                              }
                                              initialValue=""
                                              key="_finishDate"
                                              messageVariables={
                                                Object {
                                                  "label": "finishDate",
                                                }
                                              }
                                              name={
                                                Array [
                                                  "finishDate",
                                                ]
                                              }
                                              onMetaChange={[Function]}
                                              rules={
                                                Array [
                                                  Object {
                                                    "message": "Please input the deadline of this sprint!",
                                                    "required": true,
                                                  },
                                                ]
                                              }
                                              trigger="onChange"
                                              validateTrigger="onChange"
                                              valuePropName="value"
                                            >
                                              <Row
                                                className="ant-form-item"
                                                key="row"
                                              >
                                                <div
                                                  className="ant-row ant-form-item"
                                                  style={Object {}}
                                                >
                                                  <FormItemLabel
                                                    htmlFor="form_in_modal_finishDate"
                                                    initialValue=""
                                                    name="finishDate"
                                                    prefixCls="ant-form"
                                                    required={true}
                                                    requiredMark={true}
                                                    rules={
                                                      Array [
                                                        Object {
                                                          "message": "Please input the deadline of this sprint!",
                                                          "required": true,
                                                        },
                                                      ]
                                                    }
                                                  />
                                                  <FormItemInput
                                                    errors={Array []}
                                                    initialValue=""
                                                    name={Array []}
                                                    prefixCls="ant-form"
                                                    rules={
                                                      Array [
                                                        Object {
                                                          "message": "Please input the deadline of this sprint!",
                                                          "required": true,
                                                        },
                                                      ]
                                                    }
                                                    status=""
                                                    touched={false}
                                                    validateStatus=""
                                                    validating={false}
                                                    warnings={Array []}
                                                  >
                                                    <Col
                                                      className="ant-form-item-control"
                                                    >
                                                      <div
                                                        className="ant-col ant-form-item-control"
                                                        style={Object {}}
                                                      >
                                                        <div
                                                          className="ant-form-item-control-input"
                                                        >
                                                          <div
                                                            className="ant-form-item-control-input-content"
                                                          >
                                                            <Component
                                                              update={
                                                                <Picker
                                                                  disabledDate={[Function]}
                                                                  format="YYYY-MM-DD"
                                                                  showToday={true}
                                                                />
                                                              }
                                                              value=""
                                                            >
                                                              <Picker
                                                                disabledDate={[Function]}
                                                                format="YYYY-MM-DD"
                                                                id="form_in_modal_finishDate"
                                                                onChange={[Function]}
                                                                showToday={true}
                                                                value=""
                                                              >
                                                                <LocaleReceiver
                                                                  componentName="DatePicker"
                                                                  defaultLocale={
                                                                    Object {
                                                                      "lang": Object {
                                                                        "backToToday": "Back to today",
                                                                        "clear": "Clear",
                                                                        "dateFormat": "M/D/YYYY",
                                                                        "dateSelect": "select date",
                                                                        "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                                                        "dayFormat": "D",
                                                                        "decadeSelect": "Choose a decade",
                                                                        "locale": "en_US",
                                                                        "month": "Month",
                                                                        "monthBeforeYear": true,
                                                                        "monthPlaceholder": "Select month",
                                                                        "monthSelect": "Choose a month",
                                                                        "nextCentury": "Next century",
                                                                        "nextDecade": "Next decade",
                                                                        "nextMonth": "Next month (PageDown)",
                                                                        "nextYear": "Next year (Control + right)",
                                                                        "now": "Now",
                                                                        "ok": "Ok",
                                                                        "placeholder": "Select date",
                                                                        "previousCentury": "Last century",
                                                                        "previousDecade": "Last decade",
                                                                        "previousMonth": "Previous month (PageUp)",
                                                                        "previousYear": "Last year (Control + left)",
                                                                        "quarterPlaceholder": "Select quarter",
                                                                        "rangeMonthPlaceholder": Array [
                                                                          "Start month",
                                                                          "End month",
                                                                        ],
                                                                        "rangePlaceholder": Array [
                                                                          "Start date",
                                                                          "End date",
                                                                        ],
                                                                        "rangeWeekPlaceholder": Array [
                                                                          "Start week",
                                                                          "End week",
                                                                        ],
                                                                        "rangeYearPlaceholder": Array [
                                                                          "Start year",
                                                                          "End year",
                                                                        ],
                                                                        "timeSelect": "select time",
                                                                        "today": "Today",
                                                                        "weekPlaceholder": "Select week",
                                                                        "weekSelect": "Choose a week",
                                                                        "year": "Year",
                                                                        "yearFormat": "YYYY",
                                                                        "yearPlaceholder": "Select year",
                                                                        "yearSelect": "Choose a year",
                                                                      },
                                                                      "timePickerLocale": Object {
                                                                        "placeholder": "Select time",
                                                                        "rangePlaceholder": Array [
                                                                          "Start time",
                                                                          "End time",
                                                                        ],
                                                                      },
                                                                    }
                                                                  }
                                                                >
                                                                  <Picker
                                                                    allowClear={true}
                                                                    className=""
                                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                    components={
                                                                      Object {
                                                                        "button": [Function],
                                                                        "rangeItem": [Function],
                                                                      }
                                                                    }
                                                                    disabledDate={[Function]}
                                                                    format="YYYY-MM-DD"
                                                                    generateConfig={
                                                                      Object {
                                                                        "addDate": [Function],
                                                                        "addMonth": [Function],
                                                                        "addYear": [Function],
                                                                        "getDate": [Function],
                                                                        "getEndDate": [Function],
                                                                        "getFixedDate": [Function],
                                                                        "getHour": [Function],
                                                                        "getMinute": [Function],
                                                                        "getMonth": [Function],
                                                                        "getNow": [Function],
                                                                        "getSecond": [Function],
                                                                        "getWeekDay": [Function],
                                                                        "getYear": [Function],
                                                                        "isAfter": [Function],
                                                                        "isValidate": [Function],
                                                                        "locale": Object {
                                                                          "format": [Function],
                                                                          "getShortMonths": [Function],
                                                                          "getShortWeekDays": [Function],
                                                                          "getWeek": [Function],
                                                                          "getWeekFirstDate": [Function],
                                                                          "getWeekFirstDay": [Function],
                                                                          "parse": [Function],
                                                                        },
                                                                        "setDate": [Function],
                                                                        "setHour": [Function],
                                                                        "setMinute": [Function],
                                                                        "setMonth": [Function],
                                                                        "setSecond": [Function],
                                                                        "setYear": [Function],
                                                                      }
                                                                    }
                                                                    id="form_in_modal_finishDate"
                                                                    locale={
                                                                      Object {
                                                                        "backToToday": "Back to today",
                                                                        "clear": "Clear",
                                                                        "dateFormat": "M/D/YYYY",
                                                                        "dateSelect": "select date",
                                                                        "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                                                        "dayFormat": "D",
                                                                        "decadeSelect": "Choose a decade",
                                                                        "locale": "en_US",
                                                                        "month": "Month",
                                                                        "monthBeforeYear": true,
                                                                        "monthPlaceholder": "Select month",
                                                                        "monthSelect": "Choose a month",
                                                                        "nextCentury": "Next century",
                                                                        "nextDecade": "Next decade",
                                                                        "nextMonth": "Next month (PageDown)",
                                                                        "nextYear": "Next year (Control + right)",
                                                                        "now": "Now",
                                                                        "ok": "Ok",
                                                                        "placeholder": "Select date",
                                                                        "previousCentury": "Last century",
                                                                        "previousDecade": "Last decade",
                                                                        "previousMonth": "Previous month (PageUp)",
                                                                        "previousYear": "Last year (Control + left)",
                                                                        "quarterPlaceholder": "Select quarter",
                                                                        "rangeMonthPlaceholder": Array [
                                                                          "Start month",
                                                                          "End month",
                                                                        ],
                                                                        "rangePlaceholder": Array [
                                                                          "Start date",
                                                                          "End date",
                                                                        ],
                                                                        "rangeWeekPlaceholder": Array [
                                                                          "Start week",
                                                                          "End week",
                                                                        ],
                                                                        "rangeYearPlaceholder": Array [
                                                                          "Start year",
                                                                          "End year",
                                                                        ],
                                                                        "timeSelect": "select time",
                                                                        "today": "Today",
                                                                        "weekPlaceholder": "Select week",
                                                                        "weekSelect": "Choose a week",
                                                                        "year": "Year",
                                                                        "yearFormat": "YYYY",
                                                                        "yearPlaceholder": "Select year",
                                                                        "yearSelect": "Choose a year",
                                                                      }
                                                                    }
                                                                    nextIcon={
                                                                      <span
                                                                        className="ant-picker-next-icon"
                                                                      />
                                                                    }
                                                                    onChange={[Function]}
                                                                    placeholder="Select date"
                                                                    prefixCls="ant-picker"
                                                                    prevIcon={
                                                                      <span
                                                                        className="ant-picker-prev-icon"
                                                                      />
                                                                    }
                                                                    showToday={true}
                                                                    suffixIcon={<ForwardRef(CalendarOutlined) />}
                                                                    superNextIcon={
                                                                      <span
                                                                        className="ant-picker-super-next-icon"
                                                                      />
                                                                    }
                                                                    superPrevIcon={
                                                                      <span
                                                                        className="ant-picker-super-prev-icon"
                                                                      />
                                                                    }
                                                                    transitionName="ant-slide-up"
                                                                    value=""
                                                                  >
                                                                    <InnerPicker
                                                                      allowClear={true}
                                                                      className=""
                                                                      clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                      components={
                                                                        Object {
                                                                          "button": [Function],
                                                                          "rangeItem": [Function],
                                                                        }
                                                                      }
                                                                      disabledDate={[Function]}
                                                                      format="YYYY-MM-DD"
                                                                      generateConfig={
                                                                        Object {
                                                                          "addDate": [Function],
                                                                          "addMonth": [Function],
                                                                          "addYear": [Function],
                                                                          "getDate": [Function],
                                                                          "getEndDate": [Function],
                                                                          "getFixedDate": [Function],
                                                                          "getHour": [Function],
                                                                          "getMinute": [Function],
                                                                          "getMonth": [Function],
                                                                          "getNow": [Function],
                                                                          "getSecond": [Function],
                                                                          "getWeekDay": [Function],
                                                                          "getYear": [Function],
                                                                          "isAfter": [Function],
                                                                          "isValidate": [Function],
                                                                          "locale": Object {
                                                                            "format": [Function],
                                                                            "getShortMonths": [Function],
                                                                            "getShortWeekDays": [Function],
                                                                            "getWeek": [Function],
                                                                            "getWeekFirstDate": [Function],
                                                                            "getWeekFirstDay": [Function],
                                                                            "parse": [Function],
                                                                          },
                                                                          "setDate": [Function],
                                                                          "setHour": [Function],
                                                                          "setMinute": [Function],
                                                                          "setMonth": [Function],
                                                                          "setSecond": [Function],
                                                                          "setYear": [Function],
                                                                        }
                                                                      }
                                                                      id="form_in_modal_finishDate"
                                                                      locale={
                                                                        Object {
                                                                          "backToToday": "Back to today",
                                                                          "clear": "Clear",
                                                                          "dateFormat": "M/D/YYYY",
                                                                          "dateSelect": "select date",
                                                                          "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                                                          "dayFormat": "D",
                                                                          "decadeSelect": "Choose a decade",
                                                                          "locale": "en_US",
                                                                          "month": "Month",
                                                                          "monthBeforeYear": true,
                                                                          "monthPlaceholder": "Select month",
                                                                          "monthSelect": "Choose a month",
                                                                          "nextCentury": "Next century",
                                                                          "nextDecade": "Next decade",
                                                                          "nextMonth": "Next month (PageDown)",
                                                                          "nextYear": "Next year (Control + right)",
                                                                          "now": "Now",
                                                                          "ok": "Ok",
                                                                          "placeholder": "Select date",
                                                                          "previousCentury": "Last century",
                                                                          "previousDecade": "Last decade",
                                                                          "previousMonth": "Previous month (PageUp)",
                                                                          "previousYear": "Last year (Control + left)",
                                                                          "quarterPlaceholder": "Select quarter",
                                                                          "rangeMonthPlaceholder": Array [
                                                                            "Start month",
                                                                            "End month",
                                                                          ],
                                                                          "rangePlaceholder": Array [
                                                                            "Start date",
                                                                            "End date",
                                                                          ],
                                                                          "rangeWeekPlaceholder": Array [
                                                                            "Start week",
                                                                            "End week",
                                                                          ],
                                                                          "rangeYearPlaceholder": Array [
                                                                            "Start year",
                                                                            "End year",
                                                                          ],
                                                                          "timeSelect": "select time",
                                                                          "today": "Today",
                                                                          "weekPlaceholder": "Select week",
                                                                          "weekSelect": "Choose a week",
                                                                          "year": "Year",
                                                                          "yearFormat": "YYYY",
                                                                          "yearPlaceholder": "Select year",
                                                                          "yearSelect": "Choose a year",
                                                                        }
                                                                      }
                                                                      nextIcon={
                                                                        <span
                                                                          className="ant-picker-next-icon"
                                                                        />
                                                                      }
                                                                      onChange={[Function]}
                                                                      pickerRef={
                                                                        Object {
                                                                          "current": Object {
                                                                            "blur": [Function],
                                                                            "focus": [Function],
                                                                          },
                                                                        }
                                                                      }
                                                                      placeholder="Select date"
                                                                      prefixCls="ant-picker"
                                                                      prevIcon={
                                                                        <span
                                                                          className="ant-picker-prev-icon"
                                                                        />
                                                                      }
                                                                      showToday={true}
                                                                      suffixIcon={<ForwardRef(CalendarOutlined) />}
                                                                      superNextIcon={
                                                                        <span
                                                                          className="ant-picker-super-next-icon"
                                                                        />
                                                                      }
                                                                      superPrevIcon={
                                                                        <span
                                                                          className="ant-picker-super-prev-icon"
                                                                        />
                                                                      }
                                                                      transitionName="ant-slide-up"
                                                                      value=""
                                                                    >
                                                                      <PickerTrigger
                                                                        popupElement={
                                                                          <div
                                                                            className="ant-picker-panel-container"
                                                                            onMouseDown={[Function]}
                                                                          >
                                                                            <PickerPanel
                                                                              allowClear={true}
                                                                              className="ant-picker-panel-focused"
                                                                              clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                              components={
                                                                                Object {
                                                                                  "button": [Function],
                                                                                  "rangeItem": [Function],
                                                                                }
                                                                              }
                                                                              disabledDate={[Function]}
                                                                              format="YYYY-MM-DD"
                                                                              generateConfig={
                                                                                Object {
                                                                                  "addDate": [Function],
                                                                                  "addMonth": [Function],
                                                                                  "addYear": [Function],
                                                                                  "getDate": [Function],
                                                                                  "getEndDate": [Function],
                                                                                  "getFixedDate": [Function],
                                                                                  "getHour": [Function],
                                                                                  "getMinute": [Function],
                                                                                  "getMonth": [Function],
                                                                                  "getNow": [Function],
                                                                                  "getSecond": [Function],
                                                                                  "getWeekDay": [Function],
                                                                                  "getYear": [Function],
                                                                                  "isAfter": [Function],
                                                                                  "isValidate": [Function],
                                                                                  "locale": Object {
                                                                                    "format": [Function],
                                                                                    "getShortMonths": [Function],
                                                                                    "getShortWeekDays": [Function],
                                                                                    "getWeek": [Function],
                                                                                    "getWeekFirstDate": [Function],
                                                                                    "getWeekFirstDay": [Function],
                                                                                    "parse": [Function],
                                                                                  },
                                                                                  "setDate": [Function],
                                                                                  "setHour": [Function],
                                                                                  "setMinute": [Function],
                                                                                  "setMonth": [Function],
                                                                                  "setSecond": [Function],
                                                                                  "setYear": [Function],
                                                                                }
                                                                              }
                                                                              id="form_in_modal_finishDate"
                                                                              locale={
                                                                                Object {
                                                                                  "backToToday": "Back to today",
                                                                                  "clear": "Clear",
                                                                                  "dateFormat": "M/D/YYYY",
                                                                                  "dateSelect": "select date",
                                                                                  "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                                                                  "dayFormat": "D",
                                                                                  "decadeSelect": "Choose a decade",
                                                                                  "locale": "en_US",
                                                                                  "month": "Month",
                                                                                  "monthBeforeYear": true,
                                                                                  "monthPlaceholder": "Select month",
                                                                                  "monthSelect": "Choose a month",
                                                                                  "nextCentury": "Next century",
                                                                                  "nextDecade": "Next decade",
                                                                                  "nextMonth": "Next month (PageDown)",
                                                                                  "nextYear": "Next year (Control + right)",
                                                                                  "now": "Now",
                                                                                  "ok": "Ok",
                                                                                  "placeholder": "Select date",
                                                                                  "previousCentury": "Last century",
                                                                                  "previousDecade": "Last decade",
                                                                                  "previousMonth": "Previous month (PageUp)",
                                                                                  "previousYear": "Last year (Control + left)",
                                                                                  "quarterPlaceholder": "Select quarter",
                                                                                  "rangeMonthPlaceholder": Array [
                                                                                    "Start month",
                                                                                    "End month",
                                                                                  ],
                                                                                  "rangePlaceholder": Array [
                                                                                    "Start date",
                                                                                    "End date",
                                                                                  ],
                                                                                  "rangeWeekPlaceholder": Array [
                                                                                    "Start week",
                                                                                    "End week",
                                                                                  ],
                                                                                  "rangeYearPlaceholder": Array [
                                                                                    "Start year",
                                                                                    "End year",
                                                                                  ],
                                                                                  "timeSelect": "select time",
                                                                                  "today": "Today",
                                                                                  "weekPlaceholder": "Select week",
                                                                                  "weekSelect": "Choose a week",
                                                                                  "year": "Year",
                                                                                  "yearFormat": "YYYY",
                                                                                  "yearPlaceholder": "Select year",
                                                                                  "yearSelect": "Choose a year",
                                                                                }
                                                                              }
                                                                              nextIcon={
                                                                                <span
                                                                                  className="ant-picker-next-icon"
                                                                                />
                                                                              }
                                                                              onChange={null}
                                                                              onPanelChange={[Function]}
                                                                              onSelect={[Function]}
                                                                              pickerRef={
                                                                                Object {
                                                                                  "current": Object {
                                                                                    "blur": [Function],
                                                                                    "focus": [Function],
                                                                                  },
                                                                                }
                                                                              }
                                                                              placeholder="Select date"
                                                                              prefixCls="ant-picker"
                                                                              prevIcon={
                                                                                <span
                                                                                  className="ant-picker-prev-icon"
                                                                                />
                                                                              }
                                                                              showToday={true}
                                                                              suffixIcon={<ForwardRef(CalendarOutlined) />}
                                                                              superNextIcon={
                                                                                <span
                                                                                  className="ant-picker-super-next-icon"
                                                                                />
                                                                              }
                                                                              superPrevIcon={
                                                                                <span
                                                                                  className="ant-picker-super-prev-icon"
                                                                                />
                                                                              }
                                                                              tabIndex={-1}
                                                                              transitionName="ant-slide-up"
                                                                              value=""
                                                                            />
                                                                          </div>
                                                                        }
                                                                        popupPlacement="bottomLeft"
                                                                        prefixCls="ant-picker"
                                                                        transitionName="ant-slide-up"
                                                                        visible={false}
                                                                      >
                                                                        <Trigger
                                                                          action={Array []}
                                                                          afterPopupVisibleChange={[Function]}
                                                                          autoDestroy={false}
                                                                          blurDelay={0.15}
                                                                          builtinPlacements={
                                                                            Object {
                                                                              "bottomLeft": Object {
                                                                                "offset": Array [
                                                                                  0,
                                                                                  4,
                                                                                ],
                                                                                "overflow": Object {
                                                                                  "adjustX": 1,
                                                                                  "adjustY": 1,
                                                                                },
                                                                                "points": Array [
                                                                                  "tl",
                                                                                  "bl",
                                                                                ],
                                                                              },
                                                                              "bottomRight": Object {
                                                                                "offset": Array [
                                                                                  0,
                                                                                  4,
                                                                                ],
                                                                                "overflow": Object {
                                                                                  "adjustX": 1,
                                                                                  "adjustY": 1,
                                                                                },
                                                                                "points": Array [
                                                                                  "tr",
                                                                                  "br",
                                                                                ],
                                                                              },
                                                                              "topLeft": Object {
                                                                                "offset": Array [
                                                                                  0,
                                                                                  -4,
                                                                                ],
                                                                                "overflow": Object {
                                                                                  "adjustX": 0,
                                                                                  "adjustY": 1,
                                                                                },
                                                                                "points": Array [
                                                                                  "bl",
                                                                                  "tl",
                                                                                ],
                                                                              },
                                                                              "topRight": Object {
                                                                                "offset": Array [
                                                                                  0,
                                                                                  -4,
                                                                                ],
                                                                                "overflow": Object {
                                                                                  "adjustX": 0,
                                                                                  "adjustY": 1,
                                                                                },
                                                                                "points": Array [
                                                                                  "br",
                                                                                  "tr",
                                                                                ],
                                                                              },
                                                                            }
                                                                          }
                                                                          defaultPopupVisible={false}
                                                                          destroyPopupOnHide={false}
                                                                          focusDelay={0}
                                                                          getDocument={[Function]}
                                                                          getPopupClassNameFromAlign={[Function]}
                                                                          hideAction={Array []}
                                                                          mask={false}
                                                                          maskClosable={true}
                                                                          mouseEnterDelay={0}
                                                                          mouseLeaveDelay={0.1}
                                                                          onPopupAlign={[Function]}
                                                                          onPopupVisibleChange={[Function]}
                                                                          popup={
                                                                            <div
                                                                              className="ant-picker-panel-container"
                                                                              onMouseDown={[Function]}
                                                                            >
                                                                              <PickerPanel
                                                                                allowClear={true}
                                                                                className="ant-picker-panel-focused"
                                                                                clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                                components={
                                                                                  Object {
                                                                                    "button": [Function],
                                                                                    "rangeItem": [Function],
                                                                                  }
                                                                                }
                                                                                disabledDate={[Function]}
                                                                                format="YYYY-MM-DD"
                                                                                generateConfig={
                                                                                  Object {
                                                                                    "addDate": [Function],
                                                                                    "addMonth": [Function],
                                                                                    "addYear": [Function],
                                                                                    "getDate": [Function],
                                                                                    "getEndDate": [Function],
                                                                                    "getFixedDate": [Function],
                                                                                    "getHour": [Function],
                                                                                    "getMinute": [Function],
                                                                                    "getMonth": [Function],
                                                                                    "getNow": [Function],
                                                                                    "getSecond": [Function],
                                                                                    "getWeekDay": [Function],
                                                                                    "getYear": [Function],
                                                                                    "isAfter": [Function],
                                                                                    "isValidate": [Function],
                                                                                    "locale": Object {
                                                                                      "format": [Function],
                                                                                      "getShortMonths": [Function],
                                                                                      "getShortWeekDays": [Function],
                                                                                      "getWeek": [Function],
                                                                                      "getWeekFirstDate": [Function],
                                                                                      "getWeekFirstDay": [Function],
                                                                                      "parse": [Function],
                                                                                    },
                                                                                    "setDate": [Function],
                                                                                    "setHour": [Function],
                                                                                    "setMinute": [Function],
                                                                                    "setMonth": [Function],
                                                                                    "setSecond": [Function],
                                                                                    "setYear": [Function],
                                                                                  }
                                                                                }
                                                                                id="form_in_modal_finishDate"
                                                                                locale={
                                                                                  Object {
                                                                                    "backToToday": "Back to today",
                                                                                    "clear": "Clear",
                                                                                    "dateFormat": "M/D/YYYY",
                                                                                    "dateSelect": "select date",
                                                                                    "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                                                                                    "dayFormat": "D",
                                                                                    "decadeSelect": "Choose a decade",
                                                                                    "locale": "en_US",
                                                                                    "month": "Month",
                                                                                    "monthBeforeYear": true,
                                                                                    "monthPlaceholder": "Select month",
                                                                                    "monthSelect": "Choose a month",
                                                                                    "nextCentury": "Next century",
                                                                                    "nextDecade": "Next decade",
                                                                                    "nextMonth": "Next month (PageDown)",
                                                                                    "nextYear": "Next year (Control + right)",
                                                                                    "now": "Now",
                                                                                    "ok": "Ok",
                                                                                    "placeholder": "Select date",
                                                                                    "previousCentury": "Last century",
                                                                                    "previousDecade": "Last decade",
                                                                                    "previousMonth": "Previous month (PageUp)",
                                                                                    "previousYear": "Last year (Control + left)",
                                                                                    "quarterPlaceholder": "Select quarter",
                                                                                    "rangeMonthPlaceholder": Array [
                                                                                      "Start month",
                                                                                      "End month",
                                                                                    ],
                                                                                    "rangePlaceholder": Array [
                                                                                      "Start date",
                                                                                      "End date",
                                                                                    ],
                                                                                    "rangeWeekPlaceholder": Array [
                                                                                      "Start week",
                                                                                      "End week",
                                                                                    ],
                                                                                    "rangeYearPlaceholder": Array [
                                                                                      "Start year",
                                                                                      "End year",
                                                                                    ],
                                                                                    "timeSelect": "select time",
                                                                                    "today": "Today",
                                                                                    "weekPlaceholder": "Select week",
                                                                                    "weekSelect": "Choose a week",
                                                                                    "year": "Year",
                                                                                    "yearFormat": "YYYY",
                                                                                    "yearPlaceholder": "Select year",
                                                                                    "yearSelect": "Choose a year",
                                                                                  }
                                                                                }
                                                                                nextIcon={
                                                                                  <span
                                                                                    className="ant-picker-next-icon"
                                                                                  />
                                                                                }
                                                                                onChange={null}
                                                                                onPanelChange={[Function]}
                                                                                onSelect={[Function]}
                                                                                pickerRef={
                                                                                  Object {
                                                                                    "current": Object {
                                                                                      "blur": [Function],
                                                                                      "focus": [Function],
                                                                                    },
                                                                                  }
                                                                                }
                                                                                placeholder="Select date"
                                                                                prefixCls="ant-picker"
                                                                                prevIcon={
                                                                                  <span
                                                                                    className="ant-picker-prev-icon"
                                                                                  />
                                                                                }
                                                                                showToday={true}
                                                                                suffixIcon={<ForwardRef(CalendarOutlined) />}
                                                                                superNextIcon={
                                                                                  <span
                                                                                    className="ant-picker-super-next-icon"
                                                                                  />
                                                                                }
                                                                                superPrevIcon={
                                                                                  <span
                                                                                    className="ant-picker-super-prev-icon"
                                                                                  />
                                                                                }
                                                                                tabIndex={-1}
                                                                                transitionName="ant-slide-up"
                                                                                value=""
                                                                              />
                                                                            </div>
                                                                          }
                                                                          popupAlign={Object {}}
                                                                          popupClassName=""
                                                                          popupPlacement="bottomLeft"
                                                                          popupStyle={Object {}}
                                                                          popupTransitionName="ant-slide-up"
                                                                          popupVisible={false}
                                                                          prefixCls="ant-picker-dropdown"
                                                                          showAction={Array []}
                                                                        >
                                                                          <div
                                                                            className="ant-picker"
                                                                            key="trigger"
                                                                            onMouseUp={[Function]}
                                                                          >
                                                                            <div
                                                                              className="ant-picker-input"
                                                                            >
                                                                              <input
                                                                                autoComplete="off"
                                                                                id="form_in_modal_finishDate"
                                                                                onBlur={[Function]}
                                                                                onChange={[Function]}
                                                                                onFocus={[Function]}
                                                                                onKeyDown={[Function]}
                                                                                onMouseDown={[Function]}
                                                                                placeholder="Select date"
                                                                                readOnly={true}
                                                                                size={12}
                                                                                title=""
                                                                                value=""
                                                                              />
                                                                              <span
                                                                                className="ant-picker-suffix"
                                                                              >
                                                                                <ForwardRef(CalendarOutlined)>
                                                                                  <AntdIcon
                                                                                    icon={
                                                                                      Object {
                                                                                        "icon": Object {
                                                                                          "attrs": Object {
                                                                                            "focusable": "false",
                                                                                            "viewBox": "64 64 896 896",
                                                                                          },
                                                                                          "children": Array [
                                                                                            Object {
                                                                                              "attrs": Object {
                                                                                                "d": "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z",
                                                                                              },
                                                                                              "tag": "path",
                                                                                            },
                                                                                          ],
                                                                                          "tag": "svg",
                                                                                        },
                                                                                        "name": "calendar",
                                                                                        "theme": "outlined",
                                                                                      }
                                                                                    }
                                                                                  >
                                                                                    <span
                                                                                      aria-label="calendar"
                                                                                      className="anticon anticon-calendar"
                                                                                      role="img"
                                                                                    >
                                                                                      <IconReact
                                                                                        icon={
                                                                                          Object {
                                                                                            "icon": Object {
                                                                                              "attrs": Object {
                                                                                                "focusable": "false",
                                                                                                "viewBox": "64 64 896 896",
                                                                                              },
                                                                                              "children": Array [
                                                                                                Object {
                                                                                                  "attrs": Object {
                                                                                                    "d": "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z",
                                                                                                  },
                                                                                                  "tag": "path",
                                                                                                },
                                                                                              ],
                                                                                              "tag": "svg",
                                                                                            },
                                                                                            "name": "calendar",
                                                                                            "theme": "outlined",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <svg
                                                                                          aria-hidden="true"
                                                                                          data-icon="calendar"
                                                                                          fill="currentColor"
                                                                                          focusable="false"
                                                                                          height="1em"
                                                                                          key="svg-calendar"
                                                                                          viewBox="64 64 896 896"
                                                                                          width="1em"
                                                                                        >
                                                                                          <path
                                                                                            d="M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z"
                                                                                            key="svg-calendar-svg-0"
                                                                                          />
                                                                                        </svg>
                                                                                      </IconReact>
                                                                                    </span>
                                                                                  </AntdIcon>
                                                                                </ForwardRef(CalendarOutlined)>
                                                                              </span>
                                                                            </div>
                                                                          </div>
                                                                        </Trigger>
                                                                      </PickerTrigger>
                                                                    </InnerPicker>
                                                                  </Picker>
                                                                </LocaleReceiver>
                                                              </Picker>
                                                            </Component>
                                                          </div>
                                                        </div>
                                                        <ErrorList
                                                          className="ant-form-item-explain-connected"
                                                          errors={Array []}
                                                          helpStatus=""
                                                          warnings={Array []}
                                                        >
                                                          <CSSMotion
                                                            motionAppear={false}
                                                            motionDeadline={500}
                                                            motionEnter={false}
                                                            motionName="ant-show-help"
                                                            onAppearActive={[Function]}
                                                            onAppearEnd={[Function]}
                                                            onAppearStart={[Function]}
                                                            onEnterActive={[Function]}
                                                            onEnterEnd={[Function]}
                                                            onEnterStart={[Function]}
                                                            onLeaveActive={[Function]}
                                                            onLeaveEnd={[Function]}
                                                            onLeaveStart={[Function]}
                                                            visible={false}
                                                          >
                                                            <DomWrapper />
                                                          </CSSMotion>
                                                        </ErrorList>
                                                      </div>
                                                    </Col>
                                                  </FormItemInput>
                                                </div>
                                              </Row>
                                            </Field>
                                          </WrapperField>
                                        </FormItem>
                                        <FormItemLabel
                                          label="Title"
                                          prefixCls="title"
                                          required={true}
                                        >
                                          <Col
                                            className="title-item-label"
                                          >
                                            <div
                                              className="ant-col title-item-label"
                                              style={Object {}}
                                            >
                                              <label
                                                className="title-item-required"
                                                title="Title"
                                              >
                                                Title
                                              </label>
                                            </div>
                                          </Col>
                                        </FormItemLabel>
                                        <FormItem
                                          initialValue=""
                                          name="title"
                                          rules={
                                            Array [
                                              Object {
                                                "message": "Please input the title of this sprint!",
                                                "required": true,
                                                "whitespace": true,
                                              },
                                            ]
                                          }
                                        >
                                          <WrapperField
                                            initialValue=""
                                            messageVariables={
                                              Object {
                                                "label": "title",
                                              }
                                            }
                                            name="title"
                                            onMetaChange={[Function]}
                                            rules={
                                              Array [
                                                Object {
                                                  "message": "Please input the title of this sprint!",
                                                  "required": true,
                                                  "whitespace": true,
                                                },
                                              ]
                                            }
                                            trigger="onChange"
                                            validateTrigger="onChange"
                                          >
                                            <Field
                                              fieldContext={
                                                Object {
                                                  "__INTERNAL__": Object {
                                                    "itemRef": [Function],
                                                    "name": "form_in_modal",
                                                  },
                                                  "getFieldError": [Function],
                                                  "getFieldInstance": [Function],
                                                  "getFieldValue": [Function],
                                                  "getFieldWarning": [Function],
                                                  "getFieldsError": [Function],
                                                  "getFieldsValue": [Function],
                                                  "getInternalHooks": [Function],
                                                  "isFieldTouched": [Function],
                                                  "isFieldValidating": [Function],
                                                  "isFieldsTouched": [Function],
                                                  "isFieldsValidating": [Function],
                                                  "resetFields": [Function],
                                                  "scrollToField": [Function],
                                                  "setFields": [Function],
                                                  "setFieldsValue": [Function],
                                                  "submit": [Function],
                                                  "validateFields": [Function],
                                                  "validateTrigger": "onChange",
                                                }
                                              }
                                              initialValue=""
                                              key="_title"
                                              messageVariables={
                                                Object {
                                                  "label": "title",
                                                }
                                              }
                                              name={
                                                Array [
                                                  "title",
                                                ]
                                              }
                                              onMetaChange={[Function]}
                                              rules={
                                                Array [
                                                  Object {
                                                    "message": "Please input the title of this sprint!",
                                                    "required": true,
                                                    "whitespace": true,
                                                  },
                                                ]
                                              }
                                              trigger="onChange"
                                              validateTrigger="onChange"
                                              valuePropName="value"
                                            >
                                              <Row
                                                className="ant-form-item"
                                                key="row"
                                              >
                                                <div
                                                  className="ant-row ant-form-item"
                                                  style={Object {}}
                                                >
                                                  <FormItemLabel
                                                    htmlFor="form_in_modal_title"
                                                    initialValue=""
                                                    name="title"
                                                    prefixCls="ant-form"
                                                    required={true}
                                                    requiredMark={true}
                                                    rules={
                                                      Array [
                                                        Object {
                                                          "message": "Please input the title of this sprint!",
                                                          "required": true,
                                                          "whitespace": true,
                                                        },
                                                      ]
                                                    }
                                                  />
                                                  <FormItemInput
                                                    errors={Array []}
                                                    initialValue=""
                                                    name={Array []}
                                                    prefixCls="ant-form"
                                                    rules={
                                                      Array [
                                                        Object {
                                                          "message": "Please input the title of this sprint!",
                                                          "required": true,
                                                          "whitespace": true,
                                                        },
                                                      ]
                                                    }
                                                    status=""
                                                    touched={false}
                                                    validateStatus=""
                                                    validating={false}
                                                    warnings={Array []}
                                                  >
                                                    <Col
                                                      className="ant-form-item-control"
                                                    >
                                                      <div
                                                        className="ant-col ant-form-item-control"
                                                        style={Object {}}
                                                      >
                                                        <div
                                                          className="ant-form-item-control-input"
                                                        >
                                                          <div
                                                            className="ant-form-item-control-input-content"
                                                          >
                                                            <Component
                                                              update={
                                                                <Input
                                                                  autoComplete="on"
                                                                  maxLength={60}
                                                                  required={true}
                                                                  type="text"
                                                                />
                                                              }
                                                              value=""
                                                            >
                                                              <Input
                                                                autoComplete="on"
                                                                id="form_in_modal_title"
                                                                maxLength={60}
                                                                onChange={[Function]}
                                                                required={true}
                                                                type="text"
                                                                value=""
                                                              >
                                                                <ClearableLabeledInput
                                                                  autoComplete="on"
                                                                  bordered={true}
                                                                  element={
                                                                    <input
                                                                      autoComplete="on"
                                                                      className="ant-input"
                                                                      id="form_in_modal_title"
                                                                      maxLength={60}
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      required={true}
                                                                      type="text"
                                                                      value=""
                                                                    />
                                                                  }
                                                                  focused={false}
                                                                  handleReset={[Function]}
                                                                  id="form_in_modal_title"
                                                                  inputType="input"
                                                                  maxLength={60}
                                                                  onChange={[Function]}
                                                                  prefixCls="ant-input"
                                                                  required={true}
                                                                  triggerFocus={[Function]}
                                                                  type="text"
                                                                  value=""
                                                                >
                                                                  <input
                                                                    autoComplete="on"
                                                                    className="ant-input"
                                                                    id="form_in_modal_title"
                                                                    maxLength={60}
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    required={true}
                                                                    type="text"
                                                                    value=""
                                                                  />
                                                                </ClearableLabeledInput>
                                                              </Input>
                                                            </Component>
                                                          </div>
                                                        </div>
                                                        <ErrorList
                                                          className="ant-form-item-explain-connected"
                                                          errors={Array []}
                                                          helpStatus=""
                                                          warnings={Array []}
                                                        >
                                                          <CSSMotion
                                                            motionAppear={false}
                                                            motionDeadline={500}
                                                            motionEnter={false}
                                                            motionName="ant-show-help"
                                                            onAppearActive={[Function]}
                                                            onAppearEnd={[Function]}
                                                            onAppearStart={[Function]}
                                                            onEnterActive={[Function]}
                                                            onEnterEnd={[Function]}
                                                            onEnterStart={[Function]}
                                                            onLeaveActive={[Function]}
                                                            onLeaveEnd={[Function]}
                                                            onLeaveStart={[Function]}
                                                            visible={false}
                                                          >
                                                            <DomWrapper />
                                                          </CSSMotion>
                                                        </ErrorList>
                                                      </div>
                                                    </Col>
                                                  </FormItemInput>
                                                </div>
                                              </Row>
                                            </Field>
                                          </WrapperField>
                                        </FormItem>
                                        <FormItemLabel
                                          label="Goal"
                                          prefixCls="goal"
                                          required={true}
                                        >
                                          <Col
                                            className="goal-item-label"
                                          >
                                            <div
                                              className="ant-col goal-item-label"
                                              style={Object {}}
                                            >
                                              <label
                                                className="goal-item-required"
                                                title="Goal"
                                              >
                                                Goal
                                              </label>
                                            </div>
                                          </Col>
                                        </FormItemLabel>
                                        <FormItem
                                          initialValue=""
                                          name="goal"
                                          rules={
                                            Array [
                                              Object {
                                                "message": "Please input the goal of this sprint!",
                                                "required": true,
                                                "whitespace": true,
                                              },
                                            ]
                                          }
                                        >
                                          <WrapperField
                                            initialValue=""
                                            messageVariables={
                                              Object {
                                                "label": "goal",
                                              }
                                            }
                                            name="goal"
                                            onMetaChange={[Function]}
                                            rules={
                                              Array [
                                                Object {
                                                  "message": "Please input the goal of this sprint!",
                                                  "required": true,
                                                  "whitespace": true,
                                                },
                                              ]
                                            }
                                            trigger="onChange"
                                            validateTrigger="onChange"
                                          >
                                            <Field
                                              fieldContext={
                                                Object {
                                                  "__INTERNAL__": Object {
                                                    "itemRef": [Function],
                                                    "name": "form_in_modal",
                                                  },
                                                  "getFieldError": [Function],
                                                  "getFieldInstance": [Function],
                                                  "getFieldValue": [Function],
                                                  "getFieldWarning": [Function],
                                                  "getFieldsError": [Function],
                                                  "getFieldsValue": [Function],
                                                  "getInternalHooks": [Function],
                                                  "isFieldTouched": [Function],
                                                  "isFieldValidating": [Function],
                                                  "isFieldsTouched": [Function],
                                                  "isFieldsValidating": [Function],
                                                  "resetFields": [Function],
                                                  "scrollToField": [Function],
                                                  "setFields": [Function],
                                                  "setFieldsValue": [Function],
                                                  "submit": [Function],
                                                  "validateFields": [Function],
                                                  "validateTrigger": "onChange",
                                                }
                                              }
                                              initialValue=""
                                              key="_goal"
                                              messageVariables={
                                                Object {
                                                  "label": "goal",
                                                }
                                              }
                                              name={
                                                Array [
                                                  "goal",
                                                ]
                                              }
                                              onMetaChange={[Function]}
                                              rules={
                                                Array [
                                                  Object {
                                                    "message": "Please input the goal of this sprint!",
                                                    "required": true,
                                                    "whitespace": true,
                                                  },
                                                ]
                                              }
                                              trigger="onChange"
                                              validateTrigger="onChange"
                                              valuePropName="value"
                                            >
                                              <Row
                                                className="ant-form-item"
                                                key="row"
                                              >
                                                <div
                                                  className="ant-row ant-form-item"
                                                  style={Object {}}
                                                >
                                                  <FormItemLabel
                                                    htmlFor="form_in_modal_goal"
                                                    initialValue=""
                                                    name="goal"
                                                    prefixCls="ant-form"
                                                    required={true}
                                                    requiredMark={true}
                                                    rules={
                                                      Array [
                                                        Object {
                                                          "message": "Please input the goal of this sprint!",
                                                          "required": true,
                                                          "whitespace": true,
                                                        },
                                                      ]
                                                    }
                                                  />
                                                  <FormItemInput
                                                    errors={Array []}
                                                    initialValue=""
                                                    name={Array []}
                                                    prefixCls="ant-form"
                                                    rules={
                                                      Array [
                                                        Object {
                                                          "message": "Please input the goal of this sprint!",
                                                          "required": true,
                                                          "whitespace": true,
                                                        },
                                                      ]
                                                    }
                                                    status=""
                                                    touched={false}
                                                    validateStatus=""
                                                    validating={false}
                                                    warnings={Array []}
                                                  >
                                                    <Col
                                                      className="ant-form-item-control"
                                                    >
                                                      <div
                                                        className="ant-col ant-form-item-control"
                                                        style={Object {}}
                                                      >
                                                        <div
                                                          className="ant-form-item-control-input"
                                                        >
                                                          <div
                                                            className="ant-form-item-control-input-content"
                                                          >
                                                            <Component
                                                              update={
                                                                <ForwardRef
                                                                  maxLength={105}
                                                                  required={true}
                                                                />
                                                              }
                                                              value=""
                                                            >
                                                              <ForwardRef
                                                                id="form_in_modal_goal"
                                                                maxLength={105}
                                                                onChange={[Function]}
                                                                required={true}
                                                                value=""
                                                              >
                                                                <ClearableLabeledInput
                                                                  bordered={true}
                                                                  element={
                                                                    <TextArea
                                                                      className=""
                                                                      id="form_in_modal_goal"
                                                                      maxLength={105}
                                                                      onChange={[Function]}
                                                                      onCompositionEnd={[Function]}
                                                                      onCompositionStart={[Function]}
                                                                      prefixCls="ant-input"
                                                                      required={true}
                                                                      value=""
                                                                    />
                                                                  }
                                                                  handleReset={[Function]}
                                                                  id="form_in_modal_goal"
                                                                  inputType="text"
                                                                  prefixCls="ant-input"
                                                                  required={true}
                                                                  value=""
                                                                >
                                                                  <TextArea
                                                                    className=""
                                                                    id="form_in_modal_goal"
                                                                    maxLength={105}
                                                                    onChange={[Function]}
                                                                    onCompositionEnd={[Function]}
                                                                    onCompositionStart={[Function]}
                                                                    prefixCls="ant-input"
                                                                    required={true}
                                                                    value=""
                                                                  >
                                                                    <ResizableTextArea
                                                                      className=""
                                                                      id="form_in_modal_goal"
                                                                      maxLength={105}
                                                                      onChange={[Function]}
                                                                      onCompositionEnd={[Function]}
                                                                      onCompositionStart={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      prefixCls="ant-input"
                                                                      required={true}
                                                                      value=""
                                                                    >
                                                                      <ResizeObserver
                                                                        disabled={true}
                                                                        onResize={[Function]}
                                                                      >
                                                                        <SingleObserver
                                                                          disabled={true}
                                                                          key="rc-observer-key-0"
                                                                          onResize={[Function]}
                                                                        >
                                                                          <DomWrapper>
                                                                            <textarea
                                                                              className="ant-input"
                                                                              id="form_in_modal_goal"
                                                                              maxLength={105}
                                                                              onChange={[Function]}
                                                                              onCompositionEnd={[Function]}
                                                                              onCompositionStart={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              required={true}
                                                                              style={Object {}}
                                                                              value=""
                                                                            />
                                                                          </DomWrapper>
                                                                        </SingleObserver>
                                                                      </ResizeObserver>
                                                                    </ResizableTextArea>
                                                                  </TextArea>
                                                                </ClearableLabeledInput>
                                                              </ForwardRef>
                                                            </Component>
                                                          </div>
                                                        </div>
                                                        <ErrorList
                                                          className="ant-form-item-explain-connected"
                                                          errors={Array []}
                                                          helpStatus=""
                                                          warnings={Array []}
                                                        >
                                                          <CSSMotion
                                                            motionAppear={false}
                                                            motionDeadline={500}
                                                            motionEnter={false}
                                                            motionName="ant-show-help"
                                                            onAppearActive={[Function]}
                                                            onAppearEnd={[Function]}
                                                            onAppearStart={[Function]}
                                                            onEnterActive={[Function]}
                                                            onEnterEnd={[Function]}
                                                            onEnterStart={[Function]}
                                                            onLeaveActive={[Function]}
                                                            onLeaveEnd={[Function]}
                                                            onLeaveStart={[Function]}
                                                            visible={false}
                                                          >
                                                            <DomWrapper />
                                                          </CSSMotion>
                                                        </ErrorList>
                                                      </div>
                                                    </Col>
                                                  </FormItemInput>
                                                </div>
                                              </Row>
                                            </Field>
                                          </WrapperField>
                                        </FormItem>
                                      </form>
                                    </ForwardRef(Form)>
                                  </SizeContextProvider>
                                </ForwardRef(InternalForm)>
                              </div>
                              <div
                                className="ant-modal-footer"
                              >
                                <Button
                                  id="CancelInAddSprintPopup"
                                  key="CancelInAddSprintPopup"
                                  onClick={[Function]}
                                >
                                  <Wave
                                    disabled={false}
                                  >
                                    <button
                                      className="ant-btn"
                                      id="CancelInAddSprintPopup"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <LoadingIcon
                                        existIcon={false}
                                        loading={false}
                                        prefixCls="ant-btn"
                                      >
                                        <CSSMotion
                                          motionName="ant-btn-loading-icon-motion"
                                          onAppearActive={[Function]}
                                          onAppearStart={[Function]}
                                          onEnterActive={[Function]}
                                          onEnterStart={[Function]}
                                          onLeaveActive={[Function]}
                                          onLeaveStart={[Function]}
                                          removeOnLeave={true}
                                          visible={false}
                                        >
                                          <DomWrapper />
                                        </CSSMotion>
                                      </LoadingIcon>
                                      <span
                                        key=".0"
                                      >
                                        Cancel
                                      </span>
                                    </button>
                                  </Wave>
                                </Button>
                                <Button
                                  id="SaveInAddSprintPopup"
                                  key="SaveInAddSprintPopup"
                                  loading={false}
                                  onClick={[Function]}
                                  type="primary"
                                >
                                  <Wave
                                    disabled={false}
                                  >
                                    <button
                                      className="ant-btn ant-btn-primary"
                                      id="SaveInAddSprintPopup"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <LoadingIcon
                                        existIcon={false}
                                        loading={false}
                                        prefixCls="ant-btn"
                                      >
                                        <CSSMotion
                                          motionName="ant-btn-loading-icon-motion"
                                          onAppearActive={[Function]}
                                          onAppearStart={[Function]}
                                          onEnterActive={[Function]}
                                          onEnterStart={[Function]}
                                          onLeaveActive={[Function]}
                                          onLeaveStart={[Function]}
                                          removeOnLeave={true}
                                          visible={false}
                                        >
                                          <DomWrapper />
                                        </CSSMotion>
                                      </LoadingIcon>
                                      <span
                                        key=".0"
                                      >
                                        Save
                                      </span>
                                    </button>
                                  </Wave>
                                </Button>
                              </div>
                            </div>
                          </Component>
                          <div
                            aria-hidden="true"
                            style={
                              Object {
                                "height": 0,
                                "outline": "none",
                                "overflow": "hidden",
                                "width": 0,
                              }
                            }
                            tabIndex={0}
                          />
                        </div>
                      </DomWrapper>
                    </CSSMotion>
                  </Content>
                </div>
              </div>
            </Dialog>
          </Portal>
        </ForwardRef>
      </PortalWrapper>
    </Dialog>
  </Modal>
</AddSprintPopup>
`;
